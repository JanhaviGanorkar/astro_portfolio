---
// TypingText.astro
const { roles = ["Full Stack Developer", "Frontend Developer", "Backend Developer", "Python Teacher"] } = Astro.props;
---

<span id="typed-text" class="typed-text" data-roles={JSON.stringify(roles)}></span>

<script>
  // First, let's create a simpler but more reliable typing animation
  const typedTextSpan = document.getElementById('typed-text');
  const roles = JSON.parse(typedTextSpan.getAttribute('data-roles') || '[]');
  
  let roleIndex = 0;
  let charIndex = 0;
  let isDeleting = false;
  let isWaiting = false;
  
  function typeEffect() {
    if (!typedTextSpan) return;
    
    const currentRole = roles[roleIndex];
    
    if (isDeleting) {
      // Deleting text
      typedTextSpan.textContent = currentRole.substring(0, charIndex - 1);
      charIndex--;
    } else {
      // Typing text
      typedTextSpan.textContent = currentRole.substring(0, charIndex + 1);
      charIndex++;
    }
    
    // Typing speed - faster when deleting
    let typingSpeed = isDeleting ? 60 : 120;
    
    // Check typing state
    if (!isDeleting && charIndex === currentRole.length) {
  // Finished typing, wait before deleting
  typingSpeed = 500; // pause for 1.5 seconds
  isDeleting = true;
  isWaiting = true;
}
 else if (isDeleting && charIndex === 0) {
      // Finished deleting, move to next role
      isDeleting = false;
      isWaiting = false;
      roleIndex = (roleIndex + 1) % roles.length;
      typingSpeed = 500; // Pause before typing the next word
    }
    
    // Schedule next update
    setTimeout(typeEffect, typingSpeed);
  }
  
  // Start typing effect when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    if (typedTextSpan) {
      setTimeout(typeEffect, 1000);
    }
  });
  
  // Support for Astro page transitions
  document.addEventListener('astro:page-load', () => {
    // Reset state when page changes
    roleIndex = 0;
    charIndex = 0;
    isDeleting = false;
    isWaiting = false;
    
    if (typedTextSpan) {
      typedTextSpan.textContent = '';
      setTimeout(typeEffect, 1000);
    }
  });
</script>

<style>
  .typed-text {
    color: #854CE6;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .typed-text {
      font-size: 0.9em;
    }
  }
</style>
